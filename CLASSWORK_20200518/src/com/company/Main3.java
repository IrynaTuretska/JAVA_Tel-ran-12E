package com.company;
/*
Дано выражение  в виде  строки, например  “20*((876/8)+19)” , написать метод который
проверит правильность  расстановки скобок. Считаем, что скобки расставлены правильно если:
•	если каждой “(“ соответствует “)” т.е. количество открывающих скобок ‘(’, соответствует
    количеству закрывающих скобок‘)’
•	если нет ситуации, когда закрывающая скобка идет ранее соответствующей открывающей
    скобки т.е. “)2+3(“  это ошибка
“9*(8+3)-( (9+1)*5)” -> true
“9*(8+3)- (9+1)*5)” -> false
“9*8+3)-( (9+1)*5” -> false

Решение
--------
    1) Перебираем строку по символам с нулевого до String.length и считаем скобки
    2) для каждого символа проверяем
        если это ( увеличиваем счетчик
        если это ) уменьшаем счетчик
    Скобки расставлены правильно при соблюдение двух условий:
    - после перебора всей строки, счетчик равен 0, т.е. количество "(" равно ")"
    - в процессе счетчик не был отрицательным т.е. "(" встречались всегда раньше ")"

 */

public class Main3 {

    public static void main(String[] args) {
        String str="0*2()((876/8)+19)";
        System.out.println(areBracketsOk(str));


    }

    public static boolean areBracketsOk(String str){
        int i = 0;
        int bracketsCounter=0;
        while (i<str.length() && bracketsCounter >=0){
            char ch=str.charAt(i);
            if(ch=='('){
                bracketsCounter=bracketsCounter+1;
            }
            if (ch==')'){
                bracketsCounter=bracketsCounter-1;
            }
            i++;
        }

        return bracketsCounter==0;
    }
}
